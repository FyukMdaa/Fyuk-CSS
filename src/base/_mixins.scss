// ===================================
// レスポンシブ用のmixin
// ===================================

// メディアクエリのmixin
@mixin mobile {
  @media (max-width: #{$mobile - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (max-width: #{$tablet - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop}) {
    @content;
  }
}

@mixin wide {
  @media (min-width: #{$wide}) {
    @content;
  }
}

// カスタムブレイクポイント
@mixin breakpoint($size) {
  @media (max-width: #{$size}) {
    @content;
  }
}

// ===================================
// Flexbox用のmixin
// ===================================

// Flexコンテナの基本設定
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Flexセンタリング
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Flex space-between
@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

// Flex カラム
@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// ===================================
// グリッド用のmixin
// ===================================

// CSS Grid基本設定
@mixin grid($columns: 1fr, $rows: auto, $gap: $spacing-4) {
  display: grid;
  grid-template-columns: $columns;
  grid-template-rows: $rows;
  gap: $gap;
}

// グリッドセンタリング
@mixin grid-center {
  display: grid;
  place-items: center;
}

// ===================================
// ボタン用のmixin
// ===================================

// ボタンの基本スタイル
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-3 $spacing-4;
  font-size: $text-base;
  font-weight: $font-medium;
  line-height: 1;
  border: 1px solid transparent;
  border-radius: var(--border-radius);
  cursor: pointer;
  text-decoration: none;
  transition: all var(--transition-fast);
  user-select: none;
  white-space: nowrap;
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
  
  &:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }
}

// ボタンのサイズバリエーション
@mixin button-size($padding-y, $padding-x, $font-size) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
}

// ボタンのカラーバリエーション
@mixin button-variant($bg-color, $text-color, $border-color: $bg-color) {
  background-color: $bg-color;
  color: $text-color;
  border-color: $border-color;
  
  &:hover:not(:disabled) {
    background-color: darken($bg-color, 8%);
    border-color: darken($border-color, 8%);
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
  }
  
  &:active:not(:disabled) {
    transform: translateY(0);
    box-shadow: var(--shadow-sm);
  }
}

// アウトラインボタン
@mixin button-outline($color) {
  background-color: transparent;
  color: $color;
  border-color: $color;
  
  &:hover:not(:disabled) {
    background-color: $color;
    color: var(--color-text-inverse);
  }
}

// ===================================
// カード用のmixin
// ===================================

// カードの基本スタイル
@mixin card-base {
  background-color: var(--color-bg-primary);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius-lg);
  box-shadow: var(--shadow-sm);
  overflow: hidden;
  transition: all var(--transition-base);
}

// ホバー可能なカード
@mixin card-hoverable {
  &:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
  }
}

// ===================================
// フォーム用のmixin
// ===================================

// インプットの基本スタイル
@mixin input-base {
  width: 100%;
  padding: $spacing-3 $spacing-4;
  font-size: $text-base;
  line-height: 1.5;
  color: var(--color-text-primary);
  background-color: var(--color-bg-primary);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius);
  transition: all var(--transition-fast);
  
  &::placeholder {
    color: var(--color-text-muted);
  }
  
  &:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 3px rgba(var(--color-primary), 0.1);
  }
  
  &:disabled {
    background-color: var(--color-bg-muted);
    color: var(--color-text-muted);
    cursor: not-allowed;
  }
}

// エラー状態のインプット
@mixin input-error {
  border-color: var(--color-danger);
  
  &:focus {
    border-color: var(--color-danger);
    box-shadow: 0 0 0 3px rgba(var(--color-danger), 0.1);
  }
}

// 成功状態のインプット
@mixin input-success {
  border-color: var(--color-success);
  
  &:focus {
    border-color: var(--color-success);
    box-shadow: 0 0 0 3px rgba(var(--color-success), 0.1);
  }
}

// ===================================
// テキスト関連のmixin
// ===================================

// テキストの切り詰め（1行）
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// テキストの切り詰め（複数行）
@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// テキストのグラデーション
@mixin text-gradient($gradient) {
  background: $gradient;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

// ===================================
// アニメーション関連のmixin
// ===================================

// フェードイン
@mixin fade-in($duration: var(--transition-base)) {
  opacity: 0;
  animation: fadeIn $duration ease-in-out forwards;
}

@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

// スライドイン（上から）
@mixin slide-in-top($duration: var(--transition-base), $distance: -20px) {
  opacity: 0;
  transform: translateY($distance);
  animation: slideInTop $duration ease-out forwards;
}

@keyframes slideInTop {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// ローディングスピナー
@mixin spinner($size: 20px, $border-width: 2px, $color: var(--color-primary)) {
  width: $size;
  height: $size;
  border: $border-width solid var(--color-border-light);
  border-top-color: $color;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

// ===================================
// ユーティリティmixin
// ===================================

// 絶対配置センタリング
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// アスペクト比固定
@mixin aspect-ratio($width: 16, $height: 9) {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    display: block;
    padding-top: percentage($height / $width);
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

// スクリーンリーダー専用テキスト
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// クリアフィックス（古いブラウザ対応）
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// ===================================
// 状態関連のmixin
// ===================================

// ホバー効果
@mixin hover-lift {
  transition: transform var(--transition-fast), box-shadow var(--transition-fast);
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
  }
}

// フォーカス可能要素の基本スタイル
@mixin focusable {
  &:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }
}

// ===================================
// カラー関連のmixin
// ===================================

// カラーを明るくする関数がない場合の代替
@function lighten-color($color, $percentage) {
  @return mix(white, $color, $percentage);
}

// カラーを暗くする関数がない場合の代替
@function darken-color($color, $percentage) {
  @return mix(black, $color, $percentage);
}